{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\src\\\\pages\\\\Inventory\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, Card, Header, Segment } from 'semantic-ui-react';\nimport firebase from 'firebase';\n\nvar GreenHomes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GreenHomes, _Component);\n\n  function GreenHomes(props) {\n    var _this;\n\n    _classCallCheck(this, GreenHomes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GreenHomes).call(this, props));\n    _this.state = {\n      token: '',\n      GreenHomes: []\n    };\n    _this.makeCard = _this.makeCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFan = _this.toggleFan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeNotification = _this.makeNotification.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GreenHomes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref('/inventory').on('value', function (snapshot) {\n        _this2.setState({\n          token: [snapshot.val().Token]\n        });\n      });\n      firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1').on('value', function (snapshot) {\n        _this2.setState({\n          GreenHomes: [snapshot.val()]\n        });\n\n        if (snapshot.val().Errors.error !== '') {\n          _this2.makeNotification(snapshot.val().Errors.error);\n        }\n\n        if (snapshot.val().sensorData.Sensor1.humidity > 40 || snapshot.val().sensorData.Sensor1.humidity < 20) {\n          _this2.makeNotification(\"Humidity not within acceptable ranges\");\n        }\n\n        if (snapshot.val().sensorData.Sensor1.temprature > 35 || snapshot.val().sensorData.Sensor1.temperature < 20) {\n          _this2.makeNotification(\"Temperature not within acceptable ranges\");\n        }\n      });\n    }\n  }, {\n    key: \"toggleFan\",\n    value: function toggleFan() {\n      firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Button').update({\n        fanStatusNew: !this.state.GreenHomes[0].sensorData.Sensor1.fanStatus\n      });\n    }\n  }, {\n    key: \"makeCard\",\n    value: function makeCard(house) {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, house.name), React.createElement(Card.Description, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Temperature: \", house.sensorData.Sensor1.temperature, \"\\xB0C\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"Humidity: \", house.sensorData.Sensor1.humidity, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Fan Status: \", String(house.sensorData.Sensor1.fanStatus))), React.createElement(Card.Content, {\n        extra: true,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui center buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: this.toggleFan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Toggle Fan\"))));\n    }\n  }, {\n    key: \"makeNotification\",\n    value: function makeNotification(error) {\n      console.log(\"start request\");\n      fetch('https://fcm.googleapis.com/fcm/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'key=AAAAepQznBg:APA91bF0RrH9IZm-J5r1XnQaBYmeeokQ7h6rW1gV_GiWWUyzTC5ShddjE5BqOiG7kcMPD-rwZW61-1YqzZ_8GiBBdSM3q24yyeK0nUZiN2DWn5GgiPvpD2tgpPBzyeuw2qCe_oV5cIs_'\n        },\n        body: JSON.stringify({\n          notification: {\n            title: 'GreenHouse management System',\n            body: error\n          },\n          to: this.props.token\n        })\n      });\n      console.log('made Request');\n      firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Errors').update({\n        error: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Segment, {\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Container, {\n        text: true,\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        style: {\n          fontSize: '2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"GreenHouses\"), this.state.GreenHomes.map(this.makeCard))));\n    }\n  }]);\n\n  return GreenHomes;\n}(Component);\n\nexport default GreenHomes;","map":{"version":3,"sources":["C:\\Users\\Jacob\\WebstormProjects\\client\\src\\pages\\Inventory\\index.js"],"names":["React","Component","Button","Container","Card","Header","Segment","firebase","GreenHomes","props","state","token","makeCard","bind","toggleFan","makeNotification","database","ref","on","snapshot","setState","val","Token","Errors","error","sensorData","Sensor1","humidity","temprature","temperature","update","fanStatusNew","fanStatus","house","textAlign","name","String","console","log","fetch","method","headers","Authorization","body","JSON","stringify","notification","title","to","marginTop","fontSize","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Container,\n  Card,\n  Header,\n  Segment,\n} from 'semantic-ui-react';\nimport firebase from 'firebase';\n\nclass GreenHomes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      GreenHomes: [],\n    };\n    this.makeCard = this.makeCard.bind(this);\n    this.toggleFan = this.toggleFan.bind(this);\n    this.makeNotification = this.makeNotification.bind(this);\n  }\n\n  componentDidMount() {\n    firebase.database().ref('/inventory').on('value', (snapshot) => {\n      this.setState({\n        token: [snapshot.val().Token],\n      });\n    });\n\n    firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1').on('value', (snapshot) => {\n      this.setState({\n        GreenHomes: [snapshot.val()],\n      });\n      if (snapshot.val().Errors.error !== '') {\n        this.makeNotification(snapshot.val().Errors.error);\n      }\n\n      if (snapshot.val().sensorData.Sensor1.humidity > 40 || snapshot.val().sensorData.Sensor1.humidity < 20){\n        this.makeNotification(\"Humidity not within acceptable ranges\");\n      }\n\n      if (snapshot.val().sensorData.Sensor1.temprature > 35 || snapshot.val().sensorData.Sensor1.temperature <20){\n        this.makeNotification(\"Temperature not within acceptable ranges\");\n      }\n    });\n  }\n\n  toggleFan() {\n    firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Button').update(\n      {\n        fanStatusNew: !this.state.GreenHomes[0].sensorData.Sensor1.fanStatus,\n      },\n    );\n  }\n\n  makeCard(house) {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header\n            style={{ textAlign: 'center' }}\n          >\n            {house.name}\n          </Card.Header>\n          <Card.Description style={{ textAlign: 'center' }}>\n            Temperature: {house.sensorData.Sensor1.temperature}&#176;C\n            <br/>\n            Humidity: {house.sensorData.Sensor1.humidity}\n            <br/>\n            Fan Status: {String(house.sensorData.Sensor1.fanStatus)}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra style={{ textAlign: 'center' }}>\n          <div className=\"ui center buttons\">\n            <Button\n              basic\n              color=\"green\"\n              onClick={this.toggleFan}\n            >\n              Toggle Fan\n            </Button>\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  makeNotification(error) {\n    console.log(\"start request\");\n    fetch('https://fcm.googleapis.com/fcm/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'key=AAAAepQznBg:APA91bF0RrH9IZm-J5r1XnQaBYmeeokQ7h6rW1gV_GiWWUyzTC5ShddjE5BqOiG7kcMPD-rwZW61-1YqzZ_8GiBBdSM3q24yyeK0nUZiN2DWn5GgiPvpD2tgpPBzyeuw2qCe_oV5cIs_',\n      },\n      body: JSON.stringify({\n        notification: {\n          title: 'GreenHouse management System',\n          body: error,\n        },\n        to: this.props.token,\n      }),\n    });\n    console.log('made Request');\n    firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Errors').update(\n      {\n        error: '',\n      },\n    );\n  }\n\n\n  render() {\n    return (\n      <>\n        <Segment vertical>\n          <Container text style={{ textAlign: 'center', marginTop: '20px' }}>\n            <Header as=\"h3\" style={{ fontSize: '2em' }}>\n              GreenHouses\n            </Header>\n            {this.state.GreenHomes.map(this.makeCard)}\n          </Container>\n        </Segment>\n      </>\n    );\n  }\n}\n\nexport default GreenHomes;\n"]},"metadata":{},"sourceType":"module"}