{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\WebstormProjects\\\\client\\\\src\\\\pages\\\\Inventory\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, Card, Header, Icon, Segment, Table } from 'semantic-ui-react';\nimport firebase from 'firebase';\n\nvar GreenHomes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GreenHomes, _Component);\n\n  function GreenHomes(props) {\n    var _this;\n\n    _classCallCheck(this, GreenHomes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GreenHomes).call(this, props));\n    _this.state = {\n      token: '',\n      inventory: []\n    };\n    _this.maketable = _this.maketable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeNotification = _this.makeNotification.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GreenHomes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref('/token').on('value', function (snapshot) {\n        _this2.setState({\n          token: [snapshot.val().Token]\n        });\n      });\n      firebase.database().ref('/inventory').on('value', function (snapshot) {\n        _this2.setState({\n          inventory: [snapshot.val()]\n        });\n\n        if (snapshot.val().Errors.error !== '') {\n          _this2.makeNotification(snapshot.val().Errors.error);\n        }\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"maketable\",\n    value: function maketable(item) {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Alpha Team\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Project 1\"), React.createElement(Table.Cell, {\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"2\"), React.createElement(Table.Cell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"green\",\n        name: \"checkmark\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"makeNotification\",\n    value: function makeNotification(error) {\n      console.log(\"start request\");\n      fetch('https://fcm.googleapis.com/fcm/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'key=AAAAepQznBg:APA91bF0RrH9IZm-J5r1XnQaBYmeeokQ7h6rW1gV_GiWWUyzTC5ShddjE5BqOiG7kcMPD-rwZW61-1YqzZ_8GiBBdSM3q24yyeK0nUZiN2DWn5GgiPvpD2tgpPBzyeuw2qCe_oV5cIs_'\n        },\n        body: JSON.stringify({\n          notification: {\n            title: 'GreenHouse management System',\n            body: error\n          },\n          to: this.props.token\n        })\n      });\n      console.log('made Request');\n      firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Errors').update({\n        error: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Segment, {\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Container, {\n        text: true,\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        style: {\n          fontSize: '2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Inventory\"), React.createElement(Table, {\n        celled: true,\n        structured: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        rowSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Table.HeaderCell, {\n        rowSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Cost\"), React.createElement(Table.HeaderCell, {\n        rowSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(Table.HeaderCell, {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Delivery Scheduled\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Monday\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"wednesday\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Saturday\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state.inventorys.map(this.maketable))))));\n    }\n  }]);\n\n  return GreenHomes;\n}(Component);\n\nexport default GreenHomes;","map":{"version":3,"sources":["C:\\Users\\Jacob\\WebstormProjects\\client\\src\\pages\\Inventory\\index.js"],"names":["React","Component","Button","Container","Card","Header","Icon","Segment","Table","firebase","GreenHomes","props","state","token","inventory","maketable","bind","makeNotification","database","ref","on","snapshot","setState","val","Token","Errors","error","console","log","item","fetch","method","headers","Authorization","body","JSON","stringify","notification","title","to","update","textAlign","marginTop","fontSize","inventorys","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Container,\n  Card,\n  Header,\n  Icon,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport firebase from 'firebase';\n\nclass GreenHomes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      inventory: [],\n    };\n    this.maketable = this.maketable.bind(this);\n    this.makeNotification = this.makeNotification.bind(this);\n  }\n\n  componentDidMount() {\n    firebase.database().ref('/token').on('value', (snapshot) => {\n      this.setState({\n        token: [snapshot.val().Token],\n      });\n    });\n\n    firebase.database().ref('/inventory').on('value', (snapshot) => {\n      this.setState({\n        inventory: [snapshot.val()],\n      });\n      if (snapshot.val().Errors.error !== '') {\n        this.makeNotification(snapshot.val().Errors.error);\n      }\n    });\n    console.log(this.state);\n  }\n\n  maketable(item) {\n    return (\n            <Table.Row>\n              <Table.Cell>Alpha Team</Table.Cell>\n              <Table.Cell>Project 1</Table.Cell>\n              <Table.Cell textAlign='right'>2</Table.Cell>\n              <Table.Cell textAlign='center'>\n                <Icon color='green' name='checkmark' size='large' />\n              </Table.Cell>\n              <Table.Cell />\n              <Table.Cell />\n            </Table.Row>\n    );\n  }\n\n  makeNotification(error) {\n    console.log(\"start request\");\n    fetch('https://fcm.googleapis.com/fcm/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'key=AAAAepQznBg:APA91bF0RrH9IZm-J5r1XnQaBYmeeokQ7h6rW1gV_GiWWUyzTC5ShddjE5BqOiG7kcMPD-rwZW61-1YqzZ_8GiBBdSM3q24yyeK0nUZiN2DWn5GgiPvpD2tgpPBzyeuw2qCe_oV5cIs_',\n      },\n      body: JSON.stringify({\n        notification: {\n          title: 'GreenHouse management System',\n          body: error,\n        },\n        to: this.props.token,\n      }),\n    });\n    console.log('made Request');\n    firebase.database().ref('/users/TFSInAIyjZasPfyanDjsveMmdRH2/greenHouses/-LO6EC8taWQp_X6WGnS1/Errors').update(\n      {\n        error: '',\n      },\n    );\n  }\n\n\n  render() {\n    return (\n      <>\n        <Segment vertical>\n          <Container text style={{ textAlign: 'center', marginTop: '20px' }}>\n            <Header as=\"h3\" style={{ fontSize: '2em' }}>\n              Inventory\n            </Header>\n            <Table celled structured>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell rowSpan='2'>Name</Table.HeaderCell>\n                  <Table.HeaderCell rowSpan='2'>Cost</Table.HeaderCell>\n                  <Table.HeaderCell rowSpan='2'>Stock</Table.HeaderCell>\n                  <Table.HeaderCell colSpan='3'>Delivery Scheduled</Table.HeaderCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.HeaderCell>Monday</Table.HeaderCell>\n                  <Table.HeaderCell>wednesday</Table.HeaderCell>\n                  <Table.HeaderCell>Saturday</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {this.state.inventorys.map(this.maketable)}\n              </Table.Body>\n            </Table>\n          </Container>\n        </Segment>\n      </>\n    );\n  }\n}\n\nexport default GreenHomes;\n"]},"metadata":{},"sourceType":"module"}